name: A Spring Boot Java Web Application with Code Coverage

on:
  push:
    branches:
      - master
env:  
  JAVA_VERSION: '11'
  MAVEN_RUN_COMMAND: mvn clean install
  AZURE_WEBAPP: 'toolkitdemo-java-app'
  SONAR_HOST_URL: 'http://13.68.224.57:8080'

jobs:
            
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 

    - name: Set up Java version
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
    
        
    - name: Build with the Maven
      run: ${{ env.MAVEN_RUN_COMMAND }}
      
    - name: Testing
      run: mvn clean test
      
    - name: Package
      run: mvn -B clean package
      
    - name: Mvn verify
      run: mvn -B clean verify -DskipTests
  
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: java-app
        path: '${{ github.workspace }}/target/*.jar'
        
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build and analyze
      env:  
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        scanMetadataReportFile: target/sonar/report-task.txt
      # Force to fail step after a specific time
      timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  coverage:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: mvn -B verify -P coverage --no-transfer-progress

      - uses: codecov/codecov-action@v1
        with:
          file: ./**/target/site/jacoco/jacoco.xml
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos


  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: java-app
    
   
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: '.'
        
    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.4.0
      with:
        target: 'https://toolkitdemo-java-app.azurewebsites.net'
