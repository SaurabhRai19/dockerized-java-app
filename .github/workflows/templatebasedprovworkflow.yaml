name: CICD Spring Boot Java Web App with Provisioning

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    
env:  
  JAVA_VERSION: '11'
  MAVEN_RUN_COMMAND: mvn clean install
  AZURE_WEBAPP: 'provisioned-java-app'
  AZURE_GROUP_NAME: ${{ secrets.AZURE_GROUP_NAME }}

jobs:
  provisioning:
    # The type of runner that the job will run on
    runs-on: Windows-latest
    if: github.ref == 'refs/heads/master'
    steps:

      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
          enable-AzPSSession: true

      - run: |
          $rsgExists = az group exists -n ${{ env.AZURE_GROUP_NAME }}
          if ($rsgExists -eq 'false') {
              az group create -l eastus -n ${{ env.AZURE_GROUP_NAME }}
          }
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ env.AZURE_GROUP_NAME }}
          template: ./template/azuredeploy.json

      - name: Logout
        run: |
          az logout
  build:
    runs-on: ubuntu-latest
    needs: provisioning
    steps:
    
    - uses: actions/checkout@master
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  

    - name: Set up Java version
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}
        
    - name: Build with the Maven
      run: ${{ env.MAVEN_RUN_COMMAND }}
      
           
    - name: Testing
      run: mvn clean test
      
    - name: Package
      run: mvn -B clean package
      
    - name: Mvn verify
      run: mvn -B clean verify 
  
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: java-app
        path: '${{ github.workspace }}/target/*.jar' 
        
    
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: java-app
    
    - name: Get WebApp/FunctionApp publish profile
      id: webapp
      uses: aliencube/publish-profile-actions@v1
      env:
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      with:
        resourceGroupName: ${{ env.AZURE_GROUP_NAME }}
        appName: ${{ env.AZURE_WEBAPP }}
   
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP }}
        publish-profile: ${{ steps.webapp.outputs.profile }}
        package: '.'
